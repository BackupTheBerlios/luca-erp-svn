
from MDL.Receipt import Receipt as MDL_Receipt_Receipt

# Generated by mdl_generate_python_code.py / 2005/07/12 17:25
from Modeling.Validation import ValidationException
from mx.DateTime import DateTimeFrom

from model import Model

class Receipt(Model, MDL_Receipt_Receipt): 
  """
  Receipts are objects ...
  """
  
  def __init__(self, **kw):
    "Initializer"
    # Note: if you modify this method, it is a strong requirement that
    # every parameter gets a default value, since the framework needs to be
    # able to instanciate an object with no parameter at all.
    # MDL_Receipt_Receipt.__init__(self)
    super(Receipt, self).__init__()
    for k,v in kw.items():
      self.takeValueForKey(v, k)

  def validateAmount(self, value):
    "Edit this to enforce custom business logic"
#     print `type(value)`
#     if not isinstance(value, int) or not isinstance(value, float):
    if 0: # your custom bizlogic
      raise ValidationException
    return

#   def setAmount(self, amount):
#     print `type(amount)`, `amount`
#     super(Receipt, self).setAmount(amount)

  def validateConcept(self, value):
    "Edit this to enforce custom business logic"
    if 0: # your custom bizlogic
      raise ValidationException
    return

  def validateDate(self, value):
    "Edit this to enforce custom business logic"
    if 0: # your custom bizlogic
      raise ValidationException
    return

  def validatePerson(self, value):
    "Edit this to enforce custom business logic"
    if 0: # your custom bizlogic
      raise ValidationException
    return

 
