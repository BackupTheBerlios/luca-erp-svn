* passing data to/from other windows:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
those windows should be like `ControlController' or something the
like. That class should behave just like any other Control, that is,
it has:

* an action.
* a value.
* update() method.

* window cache:
~~~~~~~~~~~~~~~
any appliucation should have a cache of windows. windows should know
whether they could be cached or not. this way, when a cached window is
to be shown, it should use a previously built window.

class CachedControl:
      def __init__ (self, klass, **kwargs):
	  self.klass= klass
	  self.self= None
	  self.kwargs= kwargs
	  seld.value= None

      def show (self):
	  if not self.self:
	     self.self= klass (**kwargs)
	     self.self.setValue (self.value)
	  self.self.update ()
	  self.self.show ()

* gtk objects connections
~~~~~~~~~~~~~~~~~~~~~~~~~
gtk identifies connections thru a connection id. we must use them
later to generate things like search, for reconnection of certain
signals. so, each gtk object could have a dict of such cid's. keys
would be (object, signal) pairs and keys will be, obviously, the cid.

* ConsistencyController depends on Modeling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we must abstract the ConsC'ller away from Modelig. no idea how... yet.

